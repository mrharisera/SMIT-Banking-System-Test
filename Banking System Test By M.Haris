{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNa7D2b5m8WO1Gix3FZ4F1c"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Banking System Mini Project Documentation"],"metadata":{"id":"xsVM8fdMqzF7"}},{"cell_type":"markdown","source":["# Class BankAccount:"],"metadata":{"id":"Uk74aqBDq3FC"}},{"cell_type":"code","source":["class BankAccount:\n","    def __init__(self, account_number, account_holder):\n","        self.account_number = account_number\n","        self.account_holder = account_holder\n","        self.balance = 0\n","        self.transactions = []\n","\n","    def deposit(self, amount):\n","        if amount > 0:\n","            self.balance += amount\n","            self.add_transaction(f\"Deposited: ${amount}\")\n","            return f\"${amount} deposited successfully.\"\n","        return \"Invalid deposit amount.\"\n","\n","    def withdraw(self, amount):\n","        if amount > 0 and self.balance >= amount:\n","            self.balance -= amount\n","            self.add_transaction(f\"Withdrew: ${amount}\")\n","            return f\"${amount} withdrawn successfully.\"\n","        elif amount > self.balance:\n","            return \"Insufficient balance.\"\n","        return \"Invalid withdrawal amount.\"\n","\n","    def check_balance(self):\n","        return f\"Account Balance: ${self.balance}\"\n","\n","    def add_transaction(self, description):\n","        self.transactions.append(description)\n","\n","    def print_statement(self):\n","        if not self.transactions:\n","            return \"No transactions available.\"\n","        statement = f\"Transaction History for Account {self.account_number}:\\n\"\n","        for transaction in self.transactions:\n","            statement += f\"{transaction}\\n\"\n","        return statement"],"metadata":{"id":"1r9EBH8usFMO","executionInfo":{"status":"ok","timestamp":1736419886703,"user_tz":-300,"elapsed":488,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Define the Bank Class:"],"metadata":{"id":"uOW-Ud-nslvO"}},{"cell_type":"code","source":["class Bank:\n","    def __init__(self):\n","        self.accounts = {}\n","        self.next_account_number = 1\n","\n","    def open_account(self, account_holder):\n","        account_number = self.next_account_number\n","        self.accounts[account_number] = BankAccount(account_number, account_holder)\n","        self.next_account_number += 1\n","        return f\"Account created successfully. Account Number: {account_number}\"\n","\n","    def get_account(self, account_number):\n","        return self.accounts.get(account_number, None)\n","\n","    def transfer(self, sender_account_number, receiver_account_number, amount):\n","        sender = self.get_account(sender_account_number)\n","        receiver = self.get_account(receiver_account_number)\n","        if sender and receiver:\n","            if sender.balance >= amount:\n","                sender.withdraw(amount)\n","                receiver.deposit(amount)\n","                return f\"${amount} transferred successfully.\"\n","            return \"Insufficient balance in sender's account.\"\n","        return \"Invalid account details.\"\n","\n","    def admin_check_total_deposit(self):\n","        total_deposits = sum(account.balance for account in self.accounts.values())\n","        return f\"Total Deposits in Bank: ${total_deposits}\"\n","\n","    def admin_check_total_accounts(self):\n","        return f\"Total Number of Accounts: {len(self.accounts)}\""],"metadata":{"id":"cqroNdeBtHrS","executionInfo":{"status":"ok","timestamp":1736420142280,"user_tz":-300,"elapsed":653,"user":{"displayName":"Mr Haris Freelancer","userId":"14924098609705501068"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# Create a Menu Driven Interface:"],"metadata":{"id":"Kfzm4gjmtcnK"}},{"cell_type":"code","source":["def main():\n","    bank = Bank()\n","    while True:\n","        print(\"\\nWelcome to the Banking System\")\n","        print(\"1. Open Account\")\n","        print(\"2. Deposit Money\")\n","        print(\"3. Withdraw Money\")\n","        print(\"4. Check Balance\")\n","        print(\"5. Transfer Money\")\n","        print(\"6. View Transaction Statement\")\n","        print(\"7. Admin: View Total Deposits\")\n","        print(\"8. Admin: View Total Accounts\")\n","        print(\"9. Exit\")\n","\n","        choice = input(\"Enter your choice: \")\n","        if choice == \"1\":\n","            name = input(\"Enter account holder's name: \")\n","            print(bank.open_account(name))\n","\n","        elif choice == \"2\":\n","            account_number = int(input(\"Enter account number: \"))\n","            amount = float(input(\"Enter amount to deposit: \"))\n","            account = bank.get_account(account_number)\n","            if account:\n","                print(account.deposit(amount))\n","            else:\n","                print(\"Invalid account number.\")\n","\n","        elif choice == \"3\":\n","            account_number = int(input(\"Enter account number: \"))\n","            amount = float(input(\"Enter amount to withdraw: \"))\n","            account = bank.get_account(account_number)\n","            if account:\n","                print(account.withdraw(amount))\n","            else:\n","                print(\"Invalid account number.\")\n","\n","        elif choice == \"4\":\n","            account_number = int(input(\"Enter account number: \"))\n","            account = bank.get_account(account_number)\n","            if account:\n","                print(account.check_balance())\n","            else:\n","                print(\"Invalid account number.\")\n","\n","        elif choice == \"5\":\n","            sender = int(input(\"Enter sender's account number: \"))\n","            receiver = int(input(\"Enter receiver's account number: \"))\n","            amount = float(input(\"Enter amount to transfer: \"))\n","            print(bank.transfer(sender, receiver, amount))\n","\n","        elif choice == \"6\":\n","            account_number = int(input(\"Enter account number: \"))\n","            account = bank.get_account(account_number)\n","            if account:\n","                print(account.print_statement())\n","            else:\n","                print(\"Invalid account number.\")\n","\n","        elif choice == \"7\":\n","            print(bank.admin_check_total_deposit())\n","\n","        elif choice == \"8\":\n","            print(bank.admin_check_total_accounts())\n","\n","        elif choice == \"9\":\n","            print(\"Thank you for using the Banking System!\")\n","            break\n","\n","        else:\n","            print(\"Invalid choice. Please try again.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IMSxp8nPvh_5","outputId":"d7e78f91-f92d-4076-a0f8-6e41cfa62dc5"},"execution_count":null,"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Account created successfully. Account Number: 1\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid choice. Please try again.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid account number.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid account number.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid account number.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid account details.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n","Invalid account number.\n","\n","Welcome to the Banking System\n","1. Open Account\n","2. Deposit Money\n","3. Withdraw Money\n","4. Check Balance\n","5. Transfer Money\n","6. View Transaction Statement\n","7. Admin: View Total Deposits\n","8. Admin: View Total Accounts\n","9. Exit\n"]}]}]}